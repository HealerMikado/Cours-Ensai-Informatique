-- Table matiere
DROP TABLE IF EXISTS matiere ;
CREATE TABLE matiere (
    id_matiere SERIAL PRIMARY KEY,
    code_matiere text UNIQUE,
    nom_matiere text,
    description_matiere text,
    volume_horaire int,
    coefficient int
) ;

INSERT INTO matiere (code_matiere, nom_matiere, description_matiere,volume_horaire,coefficient) VALUES 
('1ASTA01', 'Remise à niveau en mathématiques', 'Cet enseignement est optionnel, chaque élève décidant ou non de le suivre, pour tout ou en partie,
en fonction de son niveau...', 39, 1),
('1ASTA03', 'Statistique descriptive et SAS', 'L''objectif du cours est d''acquérir des notions de statistique descriptive et de les mettre en
application avec le logiciel SAS.', 39, 1),
('1ASTA07', 'IES : Probabilités générales', 'Rappels sur les lois discrètes et les intégrales multiples...', 60, 1),
('1ASTA10', 'Statistique exploratoire multivariée', 'A l’issue de cet enseignement, les élèves devront être capables de mettre en œuvre et...', 44, 1),
('1ASTA11 ', 'Statistique avec R', 'R est devenu un outil incontournable de calcul statistique et de visualisation des
données tant dans le monde universitaire que dans le monde de l’entreprise...', 24, 1),
('1AINF02', 'Algorithmique et complexité', 'Il existe en informatique des limites fondamentales, concernant les problèmes qu''un dispositif de calcul
peut résoudre, et le coût des solutions lorsqu''elles existent...', 30, 1),
('1AINF03 ', 'Bases de données relationnelles', 'L’objectif du cours est de présenter la démarche, les savoir-faire, les outils pour développer des
applications simples traitant des données...', 29, 1),
('1AINF05', 'Introduction à la Programmation orientée objet et documentation du code', 'Cet enseignement est optionnel, chaque élève décidant ou non de le suivre, pour tout ou en partie,
en fonction de son niveau...', 39, 1);

-- Table prof
DROP TABLE IF EXISTS professeur ;
CREATE TABLE professeur (
    id_professeur SERIAL PRIMARY KEY,
    nom_prodesseur text,
    est_doctorant boolean,
    est_hdr boolean
);
INSERT INTO professeur (nom_prodesseur,est_doctorant,est_hdr) VALUES 
('Pascale Richard', TRUE, FALSE),
('Céline Gauthier', FALSE, FALSE),
('Pierre-Eric Treyens', TRUE, FALSE),
('Charles Savel', FALSE, FALSE),
('Lionel Truquet', TRUE, TRUE),
('François Coquet ', TRUE, FALSE),
('Khaled Larbi', FALSE, FALSE),
('Ronan Le Saout', TRUE, FALSE),
('Adrien Saumard', TRUE, FALSE),
('Matthieu Marbac', TRUE, FALSE),
('Hong-Phuong Dang', TRUE, FALSE),
('Rémi Pépin', FALSE, FALSE),
('Mohamed Graiet ', TRUE, FALSE);

-- Table association prof matiere
DROP TABLE IF EXISTS association_prof_matiere ;
CREATE TABLE association_prof_matiere (
    id_matiere INTEGER,
    id_professeur INTEGER,
    PRIMARY KEY (id_matiere,id_professeur),
    CONSTRAINT association_prof_matiere_matiere_fk FOREIGN KEY (id_matiere) REFERENCES matiere(id_matiere) ON DELETE CASCADE,
    CONSTRAINT association_prof_matiere_professeur_fk FOREIGN KEY (id_professeur) REFERENCES professeur(id_professeur) ON DELETE CASCADE
);

INSERT INTO association_prof_matiere (id_matiere,id_professeur) VALUES
(1,1),
(1,2),
(1,3),
(1,4),
(2,5),
(2,6),
(2,7),
(3,8),
(4,8),
(5,10),
(6,11),
(7,12),
(8,13);

-- Table eleve
DROP TABLE IF EXISTS eleve ;
CREATE TABLE eleve (
    id_eleve SERIAL PRIMARY KEY,
    nom text,
    date_naissance DATE
);

INSERT INTO eleve (nom, date_naissance) VALUES 
('Avice Vadeboncoeur', to_date('06/05/1998', 'DD/MM/YYYY') ),
('Christine Dandonneau', to_date('11/08/1998', 'DD/MM/YYYY') ),
('Somerville Lamarre', to_date('14/06/2000', 'DD/MM/YYYY') ),
('Orane Godin', to_date('09/05/1998', 'DD/MM/YYYY') ),
('Porter De La Vergne', to_date('04/05/1999', 'DD/MM/YYYY') ),
('Juliette Gadbois', to_date('13/08/1999', 'DD/MM/YYYY') ),
('Louis Dubeau', to_date('27/11/2001', 'DD/MM/YYYY') ),
('Musette Huot', to_date('26/01/1999', 'DD/MM/YYYY') ),
('Fitz Berie', to_date('26/04/1998', 'DD/MM/YYYY') ),
('Victor Lemaître', to_date('08/08/1998', 'DD/MM/YYYY') ),
('Jacques Josseaume', to_date('07/04/1999', 'DD/MM/YYYY') ),
('Céline Jomphe', to_date('06/08/1000', 'DD/MM/YYYY') ),
('La Roux Sarrazin', to_date('03/04/1999', 'DD/MM/YYYY') ),
('Lotye Cressac', to_date('14/04/2000', 'DD/MM/YYYY') ),
('Vincent Lepage', to_date('15/03/1997', 'DD/MM/YYYY') ),
('Karel Bérard', to_date('12/12/2001', 'DD/MM/YYYY') ),
('Dominic Lang', to_date('10/03/1997', 'DD/MM/YYYY') ),
('Mavise Séguin', to_date('05/02/1998', 'DD/MM/YYYY') ),
('Iven Bérard', to_date('29/07/1998', 'DD/MM/YYYY') ),
('Cher Goudreau', to_date('27/08/1999', 'DD/MM/YYYY') ),
('Quennel Laux', to_date('18/03/1999', 'DD/MM/YYYY') ),
('Marie Legault', to_date('09/04/1998', 'DD/MM/YYYY') ),
('Tristan Clavet', to_date('02/12/2000', 'DD/MM/YYYY') ),
('Fleurette Plourde', to_date('16/01/1998', 'DD/MM/YYYY') ),
('Antoine Lacasse', to_date('20/02/1998', 'DD/MM/YYYY') ),
('Robinette Sorel', to_date('13/12/1998', 'DD/MM/YYYY') );


-- Table association eleve matière
DROP TABLE IF EXISTS association_eleve_matiere ;
CREATE TABLE association_eleve_matiere (
    id_matiere INTEGER,
    id_eleve INTEGER,
    PRIMARY KEY (id_matiere,id_eleve),
    CONSTRAINT association_eleve_matiere_matiere_fk FOREIGN KEY (id_matiere) REFERENCES matiere(id_matiere) ON DELETE CASCADE,
    CONSTRAINT association_eleve_matiere_elever_fk FOREIGN KEY (id_eleve) REFERENCES eleve(id_eleve) ON DELETE CASCADE
);

INSERT INTO association_eleve_matiere(id_matiere,id_eleve) VALUES
(1,1),
(1,2),
(1,3),
(1,4),
(1,5),
(1,6),
(1,7),
(1,8),
(2,3),
(2,4),
(2,5),
(2,6),
(2,7),
(2,8),
(2,9),
(2,10),
(3,11),
(3,12),
(3,13),
(3,14),
(3,15),
(3,16),
(3,17),
(3,18),
(4,19),
(4,20),
(4,21),
(4,22),
(4,23),
(5,24),
(5,1),
(5,2),
(5,3),
(5,4),
(5,5),
(5,6),
(5,7),
(5,8),
(5,9),
(5,10),
(6,11),
(6,12),
(6,13),
(6,14),
(6,15),
(6,16),
(6,17),
(6,18),
(6,19),
(7,20),
(7,21),
(7,22),
(7,23),
(7,24),
(7,1),
(7,2),
(7,3),
(8,4),
(8,5),
(8,6),
(8,7),
(8,8),
(8,9),
(8,10),
(8,11),
(8,12),
(8,13),
(8,14);


-- Table examen
DROP TABLE IF EXISTS examen;
CREATE TABLE examen (
    id_examen SERIAL PRIMARY KEY,
    id_matiere integer,
    nom_examen text,
    coefficient INTEGER,
    CONSTRAINT examen_matiere_fk FOREIGN KEY (id_matiere) REFERENCES matiere(id_matiere) ON DELETE CASCADE,
    UNIQUE (id_examen, id_matiere) 
);

INSERT INTO examen (nom_examen, id_matiere, coefficient) VALUES 
('controle final',1 , 2),
('controle partiel',1 , 1),
('controle final', 2, 2),
('controle partiel',2 , 1),
('controle final', 3, 2),
('controle partiel',3 , 2),
('controle final',4 , 2),
('controle partiel',4 , 2),
('controle final', 5, 3),
('controle partiel',5 , 1),
('controle final', 6, 4),
('controle partiel',6 , 1),
('controle final', 7, 2),
('controle partiel',7 , 1),
('controle final', 8, 1),
('controle partiel',8 , 1),
('Rattrage',1 , 2),
('Rattrage',2 , 2),
('Rattrage',3 , 2),
('Rattrage',4 , 2),
('Rattrage',5 , 2),
('Rattrage',6 , 4),
('Rattrage',7 , 2),
('Rattrage',8 , 1),
('oral', 8, 1),
('oral', 7, 2),
('QCM', 5, 1),
('QCM', 2, 1),
('oral', 4,2);


-- Table note
DROP TABLE IF EXISTS note;
CREATE TABLE note (
    id_eleve INTEGER,
    id_examen INTEGER,
    id_matiere INTEGER,
    note INTEGER,
    PRIMARY KEY (id_eleve,id_examen,id_matiere),
    CONSTRAINT note_eleve_matiere FOREIGN KEY (id_eleve,id_matiere) REFERENCES association_eleve_matiere(id_eleve,id_matiere) ON DELETE CASCADE,
    CONSTRAINT note_examen FOREIGN KEY (id_examen,id_matiere) REFERENCES examen(id_examen,id_matiere) ON DELETE CASCADE
);

INSERT INTO note (id_matiere,id_eleve,id_examen, note) VALUES
(1,1,1,floor(random()*(20-8+1))+8),
(1,2,1,floor(random()*(20-8+1))+8),
(1,3,1,floor(random()*(20-8+1))+8),
(1,4,1,floor(random()*(20-8+1))+8),
(1,5,1,floor(random()*(20-8+1))+8),
(1,6,1,floor(random()*(20-8+1))+8),
(1,7,1,floor(random()*(20-8+1))+8),
(1,1,2,floor(random()*(20-8+1))+8),
(1,2,2,floor(random()*(20-8+1))+8),
(1,3,2,floor(random()*(20-8+1))+8),
(1,4,2,floor(random()*(20-8+1))+8),
(1,5,2,floor(random()*(20-8+1))+8),
(1,6,2,floor(random()*(20-8+1))+8),
(1,7,2,floor(random()*(20-8+1))+8),
(1,1,17,floor(random()*(20-8+1))+8),
(1,2,17,floor(random()*(20-8+1))+8),
(1,3,17,floor(random()*(20-8+1))+8),
(2,3,3,floor(random()*(20-8+1))+8),
(2,4,3,floor(random()*(20-8+1))+8),
(2,5,3,floor(random()*(20-8+1))+8),
(2,6,3,floor(random()*(20-8+1))+8),
(2,7,3,floor(random()*(20-8+1))+8),
(2,8,3,floor(random()*(20-8+1))+8),
(2,9,3,floor(random()*(20-8+1))+8),
(2,10,3,floor(random()*(20-8+1))+8),
(2,3,4,floor(random()*(20-8+1))+8),
(2,4,4,floor(random()*(20-8+1))+8),
(2,5,4,floor(random()*(20-8+1))+8),
(2,6,4,floor(random()*(20-8+1))+8),
(2,7,4,floor(random()*(20-8+1))+8),
(2,8,4,floor(random()*(20-8+1))+8),
(2,9,4,floor(random()*(20-8+1))+8),
(2,10,4,floor(random()*(20-8+1))+8),
(2,3,28,floor(random()*(20-8+1))+8),
(2,4,28,floor(random()*(20-8+1))+8),
(2,5,28,floor(random()*(20-8+1))+8),
(2,6,28,floor(random()*(20-8+1))+8),
(2,7,28,floor(random()*(20-8+1))+8),
(2,8,28,floor(random()*(20-8+1))+8),
(2,9,28,floor(random()*(20-8+1))+8),
(2,10,28,floor(random()*(20-8+1))+8),
(2,3,18,floor(random()*(20-8+1))+8),
(2,4,18,floor(random()*(20-8+1))+8),
(2,5,18,floor(random()*(20-8+1))+8),
(2,6,18,floor(random()*(20-8+1))+8),
(2,7,18,floor(random()*(20-8+1))+8),
(3,11,5,floor(random()*(20-8+1))+8),
(3,12,5,floor(random()*(20-8+1))+8),
(3,13,5,floor(random()*(20-8+1))+8),
(3,14,5,floor(random()*(20-8+1))+8),
(3,15,5,floor(random()*(20-8+1))+8),
(3,16,5,floor(random()*(20-8+1))+8),
(3,17,5,floor(random()*(20-8+1))+8),
(3,18,5,floor(random()*(20-8+1))+8),
(3,11,6,floor(random()*(20-8+1))+8),
(3,12,6,floor(random()*(20-8+1))+8),
(3,13,6,floor(random()*(20-8+1))+8),
(3,14,6,floor(random()*(20-8+1))+8),
(3,15,6,floor(random()*(20-8+1))+8),
(3,16,6,floor(random()*(20-8+1))+8),
(3,17,6,floor(random()*(20-8+1))+8),
(3,18,6,floor(random()*(20-8+1))+8),
(3,18,19,floor(random()*(20-8+1))+8),
(4,19,8,floor(random()*(20-8+1))+8),
(4,20,8,floor(random()*(20-8+1))+8),
(4,21,8,floor(random()*(20-8+1))+8),
(4,22,8,floor(random()*(20-8+1))+8),
(4,23,8,floor(random()*(20-8+1))+8),
(4,19,7,floor(random()*(20-8+1))+8),
(4,20,7,floor(random()*(20-8+1))+8),
(4,21,7,floor(random()*(20-8+1))+8),
(4,22,7,floor(random()*(20-8+1))+8),
(4,23,7,floor(random()*(20-8+1))+8),
(4,20,20,floor(random()*(20-8+1))+8),
(5,24,9,floor(random()*(20-8+1))+8),
(5,1,9,floor(random()*(20-8+1))+8),
(5,2,9,floor(random()*(20-8+1))+8),
(5,3,9,floor(random()*(20-8+1))+8),
(5,4,9,floor(random()*(20-8+1))+8),
(5,5,9,floor(random()*(20-8+1))+8),
(5,6,9,floor(random()*(20-8+1))+8),
(5,7,9,floor(random()*(20-8+1))+8),
(5,8,9,floor(random()*(20-8+1))+8),
(5,9,9,floor(random()*(20-8+1))+8),
(5,10,9,floor(random()*(20-8+1))+8),
(5,1,10,floor(random()*(20-8+1))+8),
(5,2,10,floor(random()*(20-8+1))+8),
(5,3,10,floor(random()*(20-8+1))+8),
(5,4,10,floor(random()*(20-8+1))+8),
(5,5,10,floor(random()*(20-8+1))+8),
(5,6,10,floor(random()*(20-8+1))+8),
(5,7,10,floor(random()*(20-8+1))+8),
(5,8,10,floor(random()*(20-8+1))+8),
(5,9,10,floor(random()*(20-8+1))+8),
(5,10,10,floor(random()*(20-8+1))+8),
(5,24,27,floor(random()*(20-8+1))+8),
(5,1,27,floor(random()*(20-8+1))+8),
(5,2,27,floor(random()*(20-8+1))+8),
(5,3,27,floor(random()*(20-8+1))+8),
(5,4,27,floor(random()*(20-8+1))+8),
(5,5,27,floor(random()*(20-8+1))+8),
(5,6,27,floor(random()*(20-8+1))+8),
(5,7,27,floor(random()*(20-8+1))+8),
(5,8,27,floor(random()*(20-8+1))+8),
(5,9,27,floor(random()*(20-8+1))+8),
(5,10,27,floor(random()*(20-8+1))+8),
(5,9,21,floor(random()*(20-8+1))+8),
(5,10,21,floor(random()*(20-8+1))+8),
(6,11,11,floor(random()*(20-8+1))+8),
(6,12,11,floor(random()*(20-8+1))+8),
(6,13,11,floor(random()*(20-8+1))+8),
(6,14,11,floor(random()*(20-8+1))+8),
(6,15,11,floor(random()*(20-8+1))+8),
(6,16,11,floor(random()*(20-8+1))+8),
(6,17,11,floor(random()*(20-8+1))+8),
(6,18,11,floor(random()*(20-8+1))+8),
(6,19,11,floor(random()*(20-8+1))+8),
(6,11,12,floor(random()*(20-8+1))+8),
(6,12,12,floor(random()*(20-8+1))+8),
(6,13,12,floor(random()*(20-8+1))+8),
(6,14,12,floor(random()*(20-8+1))+8),
(6,15,12,floor(random()*(20-8+1))+8),
(6,16,12,floor(random()*(20-8+1))+8),
(6,17,12,floor(random()*(20-8+1))+8),
(6,18,12,floor(random()*(20-8+1))+8),
(6,19,12,floor(random()*(20-8+1))+8),
(6,11,22,floor(random()*(20-8+1))+8),
(6,12,22,floor(random()*(20-8+1))+8),
(6,13,22,floor(random()*(20-8+1))+8),
(6,14,22,floor(random()*(20-8+1))+8),
(7,20,13,floor(random()*(20-8+1))+8),
(7,21,13,floor(random()*(20-8+1))+8),
(7,22,13,floor(random()*(20-8+1))+8),
(7,23,13,floor(random()*(20-8+1))+8),
(7,24,13,floor(random()*(20-8+1))+8),
(7,1,13,floor(random()*(20-8+1))+8),
(7,2,13,floor(random()*(20-8+1))+8),
(7,3,13,floor(random()*(20-8+1))+8),
(7,20,14,floor(random()*(20-8+1))+8),
(7,21,14,floor(random()*(20-8+1))+8),
(7,22,14,floor(random()*(20-8+1))+8),
(7,23,14,floor(random()*(20-8+1))+8),
(7,24,14,floor(random()*(20-8+1))+8),
(7,1,14,floor(random()*(20-8+1))+8),
(7,2,14,floor(random()*(20-8+1))+8),
(7,3,14,floor(random()*(20-8+1))+8),
(7,20,23,floor(random()*(20-8+1))+8),
(7,21,23,floor(random()*(20-8+1))+8),
(7,22,23,floor(random()*(20-8+1))+8),
(7,23,23,floor(random()*(20-8+1))+8),
(7,24,23,floor(random()*(20-8+1))+8),
(7,1,23,floor(random()*(20-8+1))+8),
(7,2,23,floor(random()*(20-8+1))+8),
(7,20,26,floor(random()*(20-8+1))+8),
(7,21,26,floor(random()*(20-8+1))+8),
(7,22,26,floor(random()*(20-8+1))+8),
(7,23,26,floor(random()*(20-8+1))+8),
(7,24,26,floor(random()*(20-8+1))+8),
(7,1,26,floor(random()*(20-8+1))+8),
(7,2,26,floor(random()*(20-8+1))+8),
(7,3,26,floor(random()*(20-8+1))+8),
(8,4,15,floor(random()*(20-8+1))+8),
(8,5,15,floor(random()*(20-8+1))+8),
(8,6,15,floor(random()*(20-8+1))+8),
(8,7,15,floor(random()*(20-8+1))+8),
(8,8,15,floor(random()*(20-8+1))+8),
(8,9,15,floor(random()*(20-8+1))+8),
(8,10,15,floor(random()*(20-8+1))+8),
(8,11,15,floor(random()*(20-8+1))+8),
(8,12,15,floor(random()*(20-8+1))+8),
(8,13,15,floor(random()*(20-8+1))+8),
(8,14,15,floor(random()*(20-8+1))+8),
(8,4,16,floor(random()*(20-8+1))+8),
(8,5,16,floor(random()*(20-8+1))+8),
(8,6,16,floor(random()*(20-8+1))+8),
(8,7,16,floor(random()*(20-8+1))+8),
(8,8,16,floor(random()*(20-8+1))+8),
(8,9,16,floor(random()*(20-8+1))+8),
(8,10,16,floor(random()*(20-8+1))+8),
(8,11,16,floor(random()*(20-8+1))+8),
(8,12,16,floor(random()*(20-8+1))+8),
(8,13,16,floor(random()*(20-8+1))+8),
(8,14,16,floor(random()*(20-8+1))+8),
(8,9,24,floor(random()*(20-8+1))+8),
(8,4,25,floor(random()*(20-8+1))+8),
(8,5,25,floor(random()*(20-8+1))+8),
(8,6,25,floor(random()*(20-8+1))+8),
(8,7,25,floor(random()*(20-8+1))+8),
(8,8,25,floor(random()*(20-8+1))+8),
(8,9,25,floor(random()*(20-8+1))+8),
(8,10,25,floor(random()*(20-8+1))+8),
(8,11,25,floor(random()*(20-8+1))+8),
(8,12,25,floor(random()*(20-8+1))+8),
(8,13,25,floor(random()*(20-8+1))+8),
(8,14,25,floor(random()*(20-8+1))+8)